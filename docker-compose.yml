version: "3.9"

services:

  backend:
    build: ./backend
    restart: unless-stopped
    container_name: ${BACKEND_SERVER__HOST}
    hostname: ${BACKEND_SERVER__HOST}
    ports:
      - "${BACKEND_SERVER__PORT}:${BACKEND_SERVER__PORT}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    volumes:
      - /logs:/app/logs/

  db:
    image: postgres:15
    command: postgres -c listen_addresses='*'
    container_name: ${DB__HOST}
    hostname: ${DB__HOST}
    ports:
      - "${DB__PORT}:5432"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: ${REDIS__HOST}
    hostname: ${REDIS__HOST}
    restart: unless-stopped
    ports:
      - "${REDIS__PORT}:${REDIS__PORT}"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-cache:/data

volumes:
  postgres-data:
  redis-cache: